version: '3.2'
services:
  doenerdb:
    image: ${DOCKER_DAILY_REPO_URL}/${DOCKER_NAMESPACE}/${DOCKER_PROJECTNAME}/doenerdb:${DOCKER_IMAGE_VERSION}
    networks:
        - internal
    build: 
        context: doenerdb
        dockerfile: Dockerfile

  doenerapp:
    environment:
        SPRING_PROFILES_ACTIVE: 'production' 
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.registry==true
    image: ${DOCKER_DAILY_REPO_URL}/${DOCKER_NAMESPACE}/${DOCKER_PROJECTNAME}/doenerapp:${DOCKER_IMAGE_VERSION}
    labels:
      - traefik.backend=doenerapp${DOCKER_IMAGE_VERSION}
      - traefik.port=8080
      - traefik.docker.network=proxy_traefik_default
      - traefik.frontend.rule=Host:doener.entwicklung.god.de
    networks:
        - proxy
        - internal
#    build: 
#        context: doenerapp
#        dockerfile: Dockerfile
    healthcheck:
        test: ["CMD","nc", "-z", "localhost", "8080"]
        interval: 20s
        timeout: 10s
        retries: 10
    depends_on:
      - doenerdb
        
#    healthcheck:
#        test: ' exit 0 '
    restart: always
  reposerver:
    image: ${DOCKER_REPO_URL}/godmbh/reposerver    
networks:
  internal:
    external: false
  proxy: 
    external:
        name: proxy_traefik_default
secrets:
  doenersecret:
    file: secrets/application.yml
    